# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from hwman.grpc.protobufs_compiled import health_pb2 as hwman_dot_grpc_dot_protobufs_dot_health__pb2

GRPC_GENERATED_VERSION = '1.66.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in hwman/grpc/protobufs/health_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class HealthStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TestPing = channel.unary_unary(
                '/Health/TestPing',
                request_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.Ping.SerializeToString,
                response_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.PingResponse.FromString,
                _registered_method=True)
        self.StartInstrumentServer = channel.unary_unary(
                '/Health/StartInstrumentServer',
                request_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
                response_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
                _registered_method=True)
        self.StopInstrumentServer = channel.unary_unary(
                '/Health/StopInstrumentServer',
                request_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
                response_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
                _registered_method=True)
        self.GetInstrumentServerStatus = channel.unary_unary(
                '/Health/GetInstrumentServerStatus',
                request_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
                response_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
                _registered_method=True)
        self.StartPyroNameserver = channel.unary_unary(
                '/Health/StartPyroNameserver',
                request_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
                response_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
                _registered_method=True)
        self.StopPyroNameserver = channel.unary_unary(
                '/Health/StopPyroNameserver',
                request_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
                response_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
                _registered_method=True)
        self.GetPyroNameserverStatus = channel.unary_unary(
                '/Health/GetPyroNameserverStatus',
                request_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
                response_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
                _registered_method=True)


class HealthServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TestPing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartInstrumentServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopInstrumentServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstrumentServerStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartPyroNameserver(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopPyroNameserver(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPyroNameserverStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HealthServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TestPing': grpc.unary_unary_rpc_method_handler(
                    servicer.TestPing,
                    request_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.Ping.FromString,
                    response_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.PingResponse.SerializeToString,
            ),
            'StartInstrumentServer': grpc.unary_unary_rpc_method_handler(
                    servicer.StartInstrumentServer,
                    request_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.FromString,
                    response_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.SerializeToString,
            ),
            'StopInstrumentServer': grpc.unary_unary_rpc_method_handler(
                    servicer.StopInstrumentServer,
                    request_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.FromString,
                    response_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.SerializeToString,
            ),
            'GetInstrumentServerStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstrumentServerStatus,
                    request_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.FromString,
                    response_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.SerializeToString,
            ),
            'StartPyroNameserver': grpc.unary_unary_rpc_method_handler(
                    servicer.StartPyroNameserver,
                    request_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.FromString,
                    response_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.SerializeToString,
            ),
            'StopPyroNameserver': grpc.unary_unary_rpc_method_handler(
                    servicer.StopPyroNameserver,
                    request_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.FromString,
                    response_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.SerializeToString,
            ),
            'GetPyroNameserverStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPyroNameserverStatus,
                    request_deserializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.FromString,
                    response_serializer=hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Health', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('Health', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Health(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TestPing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Health/TestPing',
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.Ping.SerializeToString,
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.PingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartInstrumentServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Health/StartInstrumentServer',
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopInstrumentServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Health/StopInstrumentServer',
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInstrumentServerStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Health/GetInstrumentServerStatus',
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartPyroNameserver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Health/StartPyroNameserver',
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopPyroNameserver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Health/StopPyroNameserver',
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPyroNameserverStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Health/GetPyroNameserverStatus',
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.HealthRequest.SerializeToString,
            hwman_dot_grpc_dot_protobufs_dot_health__pb2.InstrumentServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
